# -*- coding: utf-8 -*-
"""prodigy_ml_01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cKAZ2nwg4XDaJwni3QvBaL6iEieku9Eh
"""

import numpy as np
import pandas as pd

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

data = pd.read_csv('/content/drive/MyDrive/boston.csv')
print(data.shape)
print(data.head())

data.isna().sum()

X = data.iloc[:, :13].values
y = data.iloc[:, -1].values

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.4, random_state = None)

from sklearn.linear_model import LinearRegression
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

X = data.drop(columns=['MEDV'])
y = data['MEDV']
X_train,X_test,y_train,y_test  = train_test_split(X,y,test_size=0.2)

data.corr()

import matplotlib.pyplot as plt
plt.scatter(y_test, y_pred)
plt.xlabel('Actual')
plt.ylabel('Predicted')
plt.show()

# Box Plot for IQR (Interquantile range)
import seaborn as sns
plt.figure(figsize=(8,6))
sns.boxplot(data = y)
plt.tight_layout()

from sklearn.metrics import mean_squared_error
print('RMSE: ', mean_squared_error(y_test, y_pred, squared = False))
print('R-Squared: ', model.score(X_test, y_test))

plt.figure(figsize=(16,6))
sns.set_style('darkgrid')
sns.histplot(data= y, bins=40, kde=True)
plt.title("Probability distribution of the data")
plt.tight_layout()
plt.grid(False)
plt.yticks(rotation = 90)
plt.show()

from scipy.stats import probplot
plt.figure(figsize=(16,6))
probplot(y, dist = "norm", plot = plt)
plt.title("Quantile-Quantile plot")
plt.yticks(rotation = 90)
plt.show()